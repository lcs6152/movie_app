{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["MoviePoster","poster","alt","src","title","className","MovieGenre","genre","Movie","genres","synopsis","map","index","key","text","maxLine","ellipsis","trimRight","basedOn","App","state","_renderMovies","movies","movie","title_english","large_cover_image","id","_getMovies","a","_callApi","setState","fetch","then","potato","json","data","catch","err","console","log","this","Component","ReactDOM","render","document","getElementById"],"mappings":"8UA8BA,SAASA,EAAT,GAAoC,IAAdC,EAAa,EAAbA,OAAQC,EAAK,EAALA,IAC1B,OACI,yBAAKC,IAAKF,EAAQC,IAAKA,EAAKE,MAAOF,EAAKG,UAAU,kBAI1D,SAASC,EAAT,GAA6B,IAARC,EAAO,EAAPA,MACjB,OACI,0BAAMF,UAAU,gBAAgBE,GAoBzBC,MArDf,YAAkD,IAAlCJ,EAAiC,EAAjCA,MAAOH,EAA0B,EAA1BA,OAAQQ,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,SACnC,OACI,yBAAKL,UAAU,SACX,yBAAKA,UAAU,iBACX,kBAACL,EAAD,CAAaC,OAAQA,EAAQC,IAAKE,KAEtC,yBAAKC,UAAU,iBACX,4BAAKD,GACL,yBAAKC,UAAU,iBACVI,EAAOE,KAAI,SAACJ,EAAOK,GAAR,OAAkB,kBAACN,EAAD,CAAYC,MAAOA,EAAOM,IAAKD,QAEjE,yBAAKP,UAAU,mBACf,kBAAC,IAAD,CACIS,KAAMJ,EACNK,QAAQ,IACRC,SAAS,MACTC,WAAS,EACTC,QAAQ,gBCkCbC,E,2MAhDbC,MAAQ,G,EAMRC,cAAgB,WAYd,OAXe,EAAKD,MAAME,OAAOX,KAAI,SAAAY,GACnC,OACE,kBAAC,EAAD,CACEnB,MAAOmB,EAAMC,cACbvB,OAAQsB,EAAME,kBACdZ,IAAKU,EAAMG,GACXjB,OAAQc,EAAMd,OACdC,SAAUa,EAAMb,e,EAQxBiB,W,sBAAa,4BAAAC,EAAA,sEACU,EAAKC,WADf,OACLP,EADK,OAEX,EAAKQ,SAAS,CACZR,WAHS,2C,EAObO,SAAW,WACT,OAAOE,MACL,yDAECC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAE,GAAI,OAAIA,EAAKC,KAAKb,UACvBc,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,O,mFAhC5BG,KAAKb,e,+BAmCG,IACAL,EAAWkB,KAAKpB,MAAhBE,OACR,OACE,yBAAKjB,UAAWiB,EAAS,MAAQ,gBAC9BA,EAASkB,KAAKnB,gBAAkB,e,GA9CvBoB,aCClBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2faf4bb6.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LinesEllipsis from 'react-lines-ellipsis'\r\nimport './Movie.css';\r\n\r\nfunction Movie({title, poster, genres, synopsis}){\r\n    return (\r\n        <div className=\"Movie\">\r\n            <div className=\"Movie__Column\">\r\n                <MoviePoster poster={poster} alt={title} />\r\n            </div>   \r\n            <div className=\"Movie__Column\">\r\n                <h1>{title}</h1>\r\n                <div className=\"Movie__Genres\">\r\n                    {genres.map((genre, index) => <MovieGenre genre={genre} key={index} />)}\r\n                </div>\r\n                <div className=\"Movie__Synopsis\">\r\n                <LinesEllipsis\r\n                    text={synopsis}\r\n                    maxLine='3'\r\n                    ellipsis='...'\r\n                    trimRight\r\n                    basedOn='letters'\r\n                    />   \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction MoviePoster({poster, alt}){\r\n    return (\r\n        <img src={poster} alt={alt} title={alt} className=\"Movie__Poster\" />\r\n    )\r\n}\r\n\r\nfunction MovieGenre({genre}){\r\n    return (\r\n        <span className=\"Movie__Genre\">{genre}</span>\r\n    )\r\n}\r\n\r\nMovie.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.array.isRequired,\r\n    synopsis: PropTypes.string.isRequired\r\n}\r\n\r\nMoviePoster.propTypes = {\r\n    poster: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired\r\n}\r\n\r\nMovieGenre.propTypes ={\r\n    genre: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Movie","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Movie from \"./Movie\";\n\nclass App extends Component {\n  // Render: componentWillMount() -> render() -> componentDidMount() 순으로 실행된다. \n  // Update componentWillReceiveProps() -> shouldComponentUpdate() -> componentWillUpdate() -> render() -> componentDidUpdate() 순으로 실행된다.\n\n  state = {};\n\n  componentDidMount() {\n    this._getMovies();\n  }\n\n  _renderMovies = () => {\n    const movies = this.state.movies.map(movie => {\n      return (\n        <Movie\n          title={movie.title_english}\n          poster={movie.large_cover_image}\n          key={movie.id}\n          genres={movie.genres}\n          synopsis={movie.synopsis}\n        />\n      );\n    });\n    return movies;\n  };\n\n  //async를 써야 await을 사용할 수 있다. \n  _getMovies = async () => {\n    const movies = await this._callApi();\n    this.setState({\n      movies\n    });\n  };\n\n  _callApi = () => {\n    return fetch(\n      \"https://yts.mx/api/v2/list_movies.json?sort_by=rating\"\n    )\n      .then(potato => potato.json())\n      .then(json => json.data.movies)\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    const { movies } = this.state;\n    return (\n      <div className={movies ? \"App\" : \"App--loading\"}>\n        {movies ? this._renderMovies() : \"Loading\"}\n      </div>\n    );\n  }\n}\n//화살표가 return 역할을 한다. \nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}